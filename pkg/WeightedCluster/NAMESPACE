import(TraMineR, cluster)
importFrom(utils, packageDescription, packageVersion)
importFrom(RColorBrewer, brewer.pal)
importFrom("graphics", "par", "plot", "legend", "lines", "polygon", "layout")
importFrom("grDevices", "adjustcolor")
importFrom("stats", "var", "cutree", "median", "qnorm", "quantile", "xtabs", "aggregate", "as.dist", "hclust","as.formula", "runif")
importFrom("graphics", "barplot", "boxplot")

export(
as.clustrange,
as.seqtree,
dtcut,
fuzzyseqplot,
wcAggregateCases,
wcClusterQuality,
wcCmpCluster,
wcKMedoids,
wcKMedRange,
wcPropertyClustering,
wcSilhouetteObs,
seqclustname,
seqpropclust

)

S3method(as.clustrange, hclust)
S3method(as.clustrange, twins)
S3method(as.clustrange, dtclust)
S3method(as.clustrange, default)

S3method(as.seqtree, hclust)
S3method(as.seqtree, twins)
S3method(as.seqtree, default)

S3method(print, clustrange)
S3method(plot, clustrange)
S3method(summary, clustrange)

S3method(print, clustrangefamily)
S3method(plot, clustrangefamily)
S3method(summary, clustrangefamily)

S3method(print, kmedoids)

S3method(print, wcAggregateCases)
S3method(wcAggregateCases, data.frame)
S3method(wcAggregateCases, matrix)

useDynLib(WeightedCluster, .registration = TRUE, .fixes = "C_")
